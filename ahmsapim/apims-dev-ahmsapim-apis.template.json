{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "ApimServiceName": {
      "type": "string"
    },
    "PolicyXMLBaseUrl": {
      "type": "string"
    },
    "serviceUrl": {
      "type": "object"
    },
    "ApiLoggerId": {
      "type": "object"
    }
  },
  "resources": [
    {
      "properties": {
        "description": "Import from \"ahmsOHFunctionEx1\" Function App",
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "1",
        "isCurrent": true,
        "subscriptionRequired": true,
        "displayName": "ahmsOHFunctionEx1",
        "serviceUrl": "[parameters('serviceUrl').ahmsohfunctionex1]",
        "path": "",
        "protocols": [
          "https"
        ]
      },
      "name": "[concat(parameters('ApimServiceName'), '/ahmsohfunctionex1')]",
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": []
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "",
        "request": {
          "queryParameters": [],
          "headers": [
            {
              "name": "Content-Type",
              "type": "",
              "required": false,
              "values": [
                "application/json"
              ]
            }
          ],
          "representations": []
        },
        "responses": [],
        "displayName": "CreateRating",
        "method": "POST",
        "urlTemplate": "/CreateRating"
      },
      "name": "[concat(parameters('ApimServiceName'), '/ahmsohfunctionex1/post-createrating')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'ahmsohfunctionex1')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/ahmsohfunctionex1-post-createrating-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/ahmsohfunctionex1/post-createrating/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'ahmsohfunctionex1', 'post-createrating')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "",
        "request": {
          "queryParameters": [
            {
              "name": "productId",
              "description": "Product Id",
              "type": "string",
              "required": true,
              "values": []
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [],
        "displayName": "GetProduct",
        "method": "GET",
        "urlTemplate": "/GetProduct"
      },
      "name": "[concat(parameters('ApimServiceName'), '/ahmsohfunctionex1/getproduct')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'ahmsohfunctionex1')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/ahmsohfunctionex1-getproduct-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/ahmsohfunctionex1/getproduct/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'ahmsohfunctionex1', 'getproduct')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [],
        "displayName": "GetProducts",
        "method": "GET",
        "urlTemplate": "/GetProducts"
      },
      "name": "[concat(parameters('ApimServiceName'), '/ahmsohfunctionex1/GetProducts')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'ahmsohfunctionex1')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/ahmsohfunctionex1-GetProducts-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/ahmsohfunctionex1/GetProducts/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'ahmsohfunctionex1', 'GetProducts')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "id",
            "type": "",
            "required": true,
            "values": []
          }
        ],
        "description": "",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [],
        "displayName": "GetRating",
        "method": "GET",
        "urlTemplate": "/rating/{id}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/ahmsohfunctionex1/get-getrating')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'ahmsohfunctionex1')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/ahmsohfunctionex1-get-getrating-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/ahmsohfunctionex1/get-getrating/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'ahmsohfunctionex1', 'get-getrating')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "userId",
            "type": "",
            "required": true,
            "values": []
          }
        ],
        "description": "",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [],
        "displayName": "GetRatings",
        "method": "GET",
        "urlTemplate": "/UserRatings/{userId}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/ahmsohfunctionex1/get-getratings')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'ahmsohfunctionex1')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/ahmsohfunctionex1-get-getratings-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/ahmsohfunctionex1/get-getratings/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'ahmsohfunctionex1', 'get-getratings')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "",
        "request": {
          "queryParameters": [
            {
              "name": "userId",
              "description": "User Id",
              "type": "string",
              "required": true,
              "values": []
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [],
        "displayName": "GetUser",
        "method": "GET",
        "urlTemplate": "/GetUser"
      },
      "name": "[concat(parameters('ApimServiceName'), '/ahmsohfunctionex1/GetUser')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'ahmsohfunctionex1')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/ahmsohfunctionex1-GetUser-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/ahmsohfunctionex1/GetUser/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'ahmsohfunctionex1', 'GetUser')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/ahmsohfunctionex1-apiPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/ahmsohfunctionex1/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'ahmsohfunctionex1')]"
      ]
    },
    {
      "properties": {
        "description": "A sample API with information related to a technical conference.  The available resources  include *Speakers*, *Sessions* and *Topics*.  A single write operation is available to provide  feedback on a session.",
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "1",
        "isCurrent": true,
        "subscriptionRequired": true,
        "displayName": "Demo Conference API",
        "serviceUrl": "[parameters('serviceUrl').democonferenceapi]",
        "path": "conference",
        "protocols": [
          "http",
          "https"
        ]
      },
      "name": "[concat(parameters('ApimServiceName'), '/demo-conference-api')]",
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": []
    },
    {
      "properties": {
        "contentType": "application/vnd.ms-azure-apim.swagger.definitions+json",
        "document": {
          "value": "{\"Body\":{\"type\":\"string\"}}"
        }
      },
      "name": "[concat(parameters('ApimServiceName'), '/demo-conference-api/5f8ffd14eb542c0d30822a9c')]",
      "type": "Microsoft.ApiManagement/service/apis/schemas",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'demo-conference-api')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "id",
            "description": "Format - int32.",
            "type": "integer",
            "required": true,
            "values": []
          }
        ],
        "description": "Retreive a representation of a single session by Id",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "OK",
            "headers": [],
            "representations": [
              {
                "contentType": "application/hal+json"
              },
              {
                "contentType": "text/plain"
              }
            ]
          }
        ],
        "displayName": "GetSession",
        "method": "GET",
        "urlTemplate": "/session/{id}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/demo-conference-api/GetSession')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'demo-conference-api')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "A list of sessions.  Optional parameters work as filters to reduce the listed sessions.",
        "request": {
          "queryParameters": [
            {
              "name": "speakername",
              "type": "string",
              "required": false,
              "values": []
            },
            {
              "name": "dayno",
              "description": "Format - int32.",
              "type": "integer",
              "required": false,
              "values": []
            },
            {
              "name": "keyword",
              "type": "string",
              "required": false,
              "values": []
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "OK",
            "headers": [],
            "representations": [
              {
                "contentType": "application/vnd.collection+json"
              }
            ]
          }
        ],
        "displayName": "GetSessions",
        "method": "GET",
        "urlTemplate": "/sessions"
      },
      "name": "[concat(parameters('ApimServiceName'), '/demo-conference-api/GetSessions')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'demo-conference-api')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "id",
            "description": "Format - int32.",
            "type": "integer",
            "required": true,
            "values": []
          }
        ],
        "description": "A list of topics covered by a particular session",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "OK",
            "headers": [],
            "representations": [
              {
                "contentType": "application/vnd.collection+json"
              }
            ]
          }
        ],
        "displayName": "GetSessionTopics",
        "method": "GET",
        "urlTemplate": "/session/{id}/topics"
      },
      "name": "[concat(parameters('ApimServiceName'), '/demo-conference-api/GetSessionTopics')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'demo-conference-api')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "id",
            "description": "Format - int32.",
            "type": "integer",
            "required": true,
            "values": []
          }
        ],
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "OK",
            "headers": [],
            "representations": [
              {
                "contentType": "application/vnd.hal+json"
              },
              {
                "contentType": "text/plain"
              }
            ]
          }
        ],
        "displayName": "GetSpeaker",
        "method": "GET",
        "urlTemplate": "/speaker/{id}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/demo-conference-api/GetSpeaker')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'demo-conference-api')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "request": {
          "queryParameters": [
            {
              "name": "dayno",
              "description": "Format - int32.",
              "type": "integer",
              "required": false,
              "values": []
            },
            {
              "name": "speakername",
              "type": "string",
              "required": false,
              "values": []
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "OK",
            "headers": [],
            "representations": [
              {
                "contentType": "application/vnd.collection+json"
              }
            ]
          }
        ],
        "displayName": "GetSpeakers",
        "method": "GET",
        "urlTemplate": "/speakers"
      },
      "name": "[concat(parameters('ApimServiceName'), '/demo-conference-api/GetSpeakers')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'demo-conference-api')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "id",
            "description": "Format - int32.",
            "type": "integer",
            "required": true,
            "values": []
          }
        ],
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "OK",
            "headers": [],
            "representations": [
              {
                "contentType": "application/vnd.collection+json"
              }
            ]
          }
        ],
        "displayName": "GetSpeakerSessions",
        "method": "GET",
        "urlTemplate": "/speaker/{id}/sessions"
      },
      "name": "[concat(parameters('ApimServiceName'), '/demo-conference-api/GetSpeakerSessions')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'demo-conference-api')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "id",
            "description": "Format - int32.",
            "type": "integer",
            "required": true,
            "values": []
          }
        ],
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "OK",
            "headers": [],
            "representations": [
              {
                "contentType": "application/vnd.collection+json"
              }
            ]
          }
        ],
        "displayName": "GetSpeakerTopics",
        "method": "GET",
        "urlTemplate": "/speaker/{id}/topics"
      },
      "name": "[concat(parameters('ApimServiceName'), '/demo-conference-api/GetSpeakerTopics')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'demo-conference-api')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "id",
            "description": "Format - int32.",
            "type": "integer",
            "required": true,
            "values": []
          }
        ],
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "OK",
            "headers": [],
            "representations": [
              {
                "contentType": "application/hal+json"
              }
            ]
          }
        ],
        "displayName": "GetTopic",
        "method": "GET",
        "urlTemplate": "/topic/{id}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/demo-conference-api/GetTopic')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'demo-conference-api')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "request": {
          "queryParameters": [
            {
              "name": "dayno",
              "description": "Format - int32.",
              "type": "integer",
              "required": false,
              "values": []
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "OK",
            "headers": [],
            "representations": [
              {
                "contentType": "application/vnd.collection+json"
              }
            ]
          }
        ],
        "displayName": "GetTopics",
        "method": "GET",
        "urlTemplate": "/topics"
      },
      "name": "[concat(parameters('ApimServiceName'), '/demo-conference-api/GetTopics')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'demo-conference-api')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "id",
            "description": "Format - int32.",
            "type": "integer",
            "required": true,
            "values": []
          }
        ],
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "OK",
            "headers": [],
            "representations": [
              {
                "contentType": "application/vnd.collection+json"
              }
            ]
          }
        ],
        "displayName": "GetTopicSessions",
        "method": "GET",
        "urlTemplate": "/topic/{id}/sessions"
      },
      "name": "[concat(parameters('ApimServiceName'), '/demo-conference-api/GetTopicSessions')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'demo-conference-api')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "id",
            "description": "Format - int32.",
            "type": "integer",
            "required": true,
            "values": []
          }
        ],
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "OK",
            "headers": [],
            "representations": [
              {
                "contentType": "application/vnd.collection+json"
              }
            ]
          }
        ],
        "displayName": "GetTopicSpeakers",
        "method": "GET",
        "urlTemplate": "/topic/{id}/speakers"
      },
      "name": "[concat(parameters('ApimServiceName'), '/demo-conference-api/GetTopicSpeakers')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'demo-conference-api')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "id",
            "description": "Format - int32.",
            "type": "integer",
            "required": true,
            "values": []
          }
        ],
        "description": "Retreive a representation of a single session by Id",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": [
            {
              "contentType": "text/plain",
              "schemaId": "5f8ffd14eb542c0d30822a9c",
              "typeName": "Body"
            }
          ]
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "OK",
            "headers": [],
            "representations": [
              {
                "contentType": "application/hal+json"
              },
              {
                "contentType": "text/plain"
              }
            ]
          }
        ],
        "displayName": "SubmitSession",
        "method": "POST",
        "urlTemplate": "/session/{id}/feedback"
      },
      "name": "[concat(parameters('ApimServiceName'), '/demo-conference-api/SubmitSession')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'demo-conference-api')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'demo-conference-api', '5f8ffd14eb542c0d30822a9c')]"
      ]
    },
    {
      "properties": {},
      "name": "[concat(parameters('ApimServiceName'), '/unlimited/demo-conference-api')]",
      "type": "Microsoft.ApiManagement/service/products/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'demo-conference-api')]"
      ]
    },
    {
      "properties": {
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "1",
        "isCurrent": true,
        "subscriptionRequired": true,
        "displayName": "Echo API",
        "serviceUrl": "[parameters('serviceUrl').echoapi]",
        "path": "echo",
        "protocols": [
          "https"
        ]
      },
      "name": "[concat(parameters('ApimServiceName'), '/echo-api')]",
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": []
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "A demonstration of a POST call based on the echo backend above. The request body is expected to contain JSON-formatted data (see example below). A policy is used to automatically transform any request sent in JSON directly to XML. In a real-world scenario this could be used to enable modern clients to speak to a legacy backend.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": [
            {
              "contentType": "application/json",
              "sample": "{\r\n\t\"vehicleType\": \"train\",\r\n\t\"maxSpeed\": 125,\r\n\t\"avgSpeed\": 90,\r\n\t\"speedUnit\": \"mph\"\r\n}"
            }
          ]
        },
        "responses": [
          {
            "statusCode": 200,
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Create resource",
        "method": "POST",
        "urlTemplate": "/resource"
      },
      "name": "[concat(parameters('ApimServiceName'), '/echo-api/create-resource')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'echo-api')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/echo-api-create-resource-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/echo-api/create-resource/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'echo-api', 'create-resource')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "A demonstration of a PUT call handled by the same \"echo\" backend as above. You can now specify a request body in addition to headers and it will be returned as well.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Modify Resource",
        "method": "PUT",
        "urlTemplate": "/resource"
      },
      "name": "[concat(parameters('ApimServiceName'), '/echo-api/modify-resource')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'echo-api')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "A demonstration of a DELETE call which traditionally deletes the resource. It is based on the same \"echo\" backend as in all other operations so nothing is actually deleted.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Remove resource",
        "method": "DELETE",
        "urlTemplate": "/resource"
      },
      "name": "[concat(parameters('ApimServiceName'), '/echo-api/remove-resource')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'echo-api')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "The HEAD operation returns only headers. In this demonstration a policy is used to set additional headers when the response is returned and to enable JSONP.",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Retrieve header only",
        "method": "HEAD",
        "urlTemplate": "/resource"
      },
      "name": "[concat(parameters('ApimServiceName'), '/echo-api/retrieve-header-only')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'echo-api')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/echo-api-retrieve-header-only-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/echo-api/retrieve-header-only/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'echo-api', 'retrieve-header-only')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "A demonstration of a GET call on a sample resource. It is handled by an \"echo\" backend which returns a response equal to the request (the supplied headers and body are being returned as received).",
        "request": {
          "queryParameters": [
            {
              "name": "param1",
              "description": "A sample parameter that is required and has a default value of \"sample\".",
              "type": "string",
              "defaultValue": "sample",
              "required": true,
              "values": [
                "sample"
              ]
            },
            {
              "name": "param2",
              "description": "Another sample parameter, set to not required.",
              "type": "number",
              "required": false,
              "values": []
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "Returned in all cases.",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Retrieve resource",
        "method": "GET",
        "urlTemplate": "/resource"
      },
      "name": "[concat(parameters('ApimServiceName'), '/echo-api/retrieve-resource')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'echo-api')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "A demonstration of a GET call with caching enabled on the same \"echo\" backend as above. Cache TTL is set to 1 hour. When you make the first request the headers you supplied will be cached. Subsequent calls will return the same headers as the first time even if you change them in your request.",
        "request": {
          "queryParameters": [
            {
              "name": "param1",
              "description": "A sample parameter that is required and has a default value of \"sample\".",
              "type": "string",
              "defaultValue": "sample",
              "required": true,
              "values": [
                "sample"
              ]
            },
            {
              "name": "param2",
              "description": "Another sample parameter, set to not required.",
              "type": "string",
              "required": false,
              "values": []
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "Retrieve resource (cached)",
        "method": "GET",
        "urlTemplate": "/resource-cached"
      },
      "name": "[concat(parameters('ApimServiceName'), '/echo-api/retrieve-resource-cached')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'echo-api')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/echo-api-retrieve-resource-cached-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/echo-api/retrieve-resource-cached/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'echo-api', 'retrieve-resource-cached')]"
      ]
    },
    {
      "properties": {},
      "name": "[concat(parameters('ApimServiceName'), '/starter/echo-api')]",
      "type": "Microsoft.ApiManagement/service/products/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'echo-api')]"
      ]
    },
    {
      "properties": {},
      "name": "[concat(parameters('ApimServiceName'), '/unlimited/echo-api')]",
      "type": "Microsoft.ApiManagement/service/products/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'echo-api')]"
      ]
    },
    {
      "properties": {
        "description": "",
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "1",
        "isCurrent": true,
        "subscriptionRequired": true,
        "displayName": "GetProducts",
        "serviceUrl": "[parameters('serviceUrl').getproducts]",
        "path": "demo",
        "protocols": [
          "https"
        ]
      },
      "name": "[concat(parameters('ApimServiceName'), '/getproducts')]",
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": []
    },
    {
      "properties": {
        "description": "",
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "1",
        "isCurrent": true,
        "subscriptionRequired": false,
        "displayName": "HybridAPI",
        "serviceUrl": "[parameters('serviceUrl').hybridapi]",
        "path": "hybrid",
        "protocols": [
          "http"
        ]
      },
      "name": "[concat(parameters('ApimServiceName'), '/hybridapi')]",
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": []
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "my desc",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [],
        "displayName": "TEst",
        "method": "GET",
        "urlTemplate": "/test"
      },
      "name": "[concat(parameters('ApimServiceName'), '/hybridapi/test')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'hybridapi')]"
      ]
    },
    {
      "properties": {},
      "name": "[concat(parameters('ApimServiceName'), '/unlimited/hybridapi')]",
      "type": "Microsoft.ApiManagement/service/products/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'hybridapi')]"
      ]
    },
    {
      "properties": {
        "description": "Import from \"ahmsOHFunctionEx1\" Function App",
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "1",
        "isCurrent": true,
        "subscriptionRequired": true,
        "displayName": "Products",
        "serviceUrl": "[parameters('serviceUrl').Api5eb2945e1a8e99feee18d730]",
        "path": "Products",
        "protocols": [
          "https"
        ]
      },
      "name": "[concat(parameters('ApimServiceName'), '/5eb2945e1a8e99feee18d730')]",
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": []
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "",
        "request": {
          "queryParameters": [
            {
              "name": "productId",
              "description": "Product Id",
              "type": "string",
              "required": true,
              "values": []
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [],
        "displayName": "GetProduct",
        "method": "GET",
        "urlTemplate": "/GetProduct"
      },
      "name": "[concat(parameters('ApimServiceName'), '/5eb2945e1a8e99feee18d730/5eb29466fd968ba115ea309a')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), '5eb2945e1a8e99feee18d730')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [],
        "displayName": "GetProducts",
        "method": "GET",
        "urlTemplate": "/GetProducts"
      },
      "name": "[concat(parameters('ApimServiceName'), '/5eb2945e1a8e99feee18d730/5eb2946695bc8822c6dbc530')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), '5eb2945e1a8e99feee18d730')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5eb2945e1a8e99feee18d730-apiPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/5eb2945e1a8e99feee18d730/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), '5eb2945e1a8e99feee18d730')]"
      ]
    },
    {
      "properties": {},
      "name": "[concat(parameters('ApimServiceName'), '/internal/5eb2945e1a8e99feee18d730')]",
      "type": "Microsoft.ApiManagement/service/products/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), '5eb2945e1a8e99feee18d730')]"
      ]
    },
    {
      "properties": {},
      "name": "[concat(parameters('ApimServiceName'), '/mobile/5eb2945e1a8e99feee18d730')]",
      "type": "Microsoft.ApiManagement/service/products/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), '5eb2945e1a8e99feee18d730')]"
      ]
    },
    {
      "properties": {},
      "name": "[concat(parameters('ApimServiceName'), '/partners/5eb2945e1a8e99feee18d730')]",
      "type": "Microsoft.ApiManagement/service/products/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), '5eb2945e1a8e99feee18d730')]"
      ]
    },
    {
      "properties": {
        "description": "Import from \"ahmsOHFunctionEx1\" Function App",
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "1",
        "isCurrent": true,
        "subscriptionRequired": true,
        "displayName": "Rating",
        "serviceUrl": "[parameters('serviceUrl').Api5eb295bc552887024441aced]",
        "path": "Rating",
        "protocols": [
          "https"
        ]
      },
      "name": "[concat(parameters('ApimServiceName'), '/5eb295bc552887024441aced')]",
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": []
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "id",
            "type": "",
            "required": true,
            "values": []
          }
        ],
        "description": "",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [],
        "displayName": "GetRating",
        "method": "GET",
        "urlTemplate": "/rating/{id}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/5eb295bc552887024441aced/5eb295c3513800c1898a02bc')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), '5eb295bc552887024441aced')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "userId",
            "type": "",
            "required": true,
            "values": []
          }
        ],
        "description": "",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [],
        "displayName": "GetRatings",
        "method": "GET",
        "urlTemplate": "/UserRatings/{userId}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/5eb295bc552887024441aced/5eb295c294b51e421e22f269')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), '5eb295bc552887024441aced')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5eb295bc552887024441aced-apiPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/5eb295bc552887024441aced/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), '5eb295bc552887024441aced')]"
      ]
    },
    {
      "properties": {},
      "name": "[concat(parameters('ApimServiceName'), '/internal/5eb295bc552887024441aced')]",
      "type": "Microsoft.ApiManagement/service/products/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), '5eb295bc552887024441aced')]"
      ]
    },
    {
      "properties": {},
      "name": "[concat(parameters('ApimServiceName'), '/mobile/5eb295bc552887024441aced')]",
      "type": "Microsoft.ApiManagement/service/products/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), '5eb295bc552887024441aced')]"
      ]
    },
    {
      "properties": {
        "description": "Import from \"ahmsOHFunctionEx1\" Function App",
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "1",
        "isCurrent": true,
        "subscriptionRequired": true,
        "displayName": "RatingCreate",
        "serviceUrl": "[parameters('serviceUrl').Api5eb2961d2157923434215b1d]",
        "path": "RatingCreate",
        "protocols": [
          "https"
        ]
      },
      "name": "[concat(parameters('ApimServiceName'), '/5eb2961d2157923434215b1d')]",
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": []
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "",
        "request": {
          "queryParameters": [],
          "headers": [
            {
              "name": "Content-Type",
              "type": "",
              "required": false,
              "values": [
                "application/json"
              ]
            }
          ],
          "representations": []
        },
        "responses": [],
        "displayName": "CreateRating",
        "method": "POST",
        "urlTemplate": "/CreateRating"
      },
      "name": "[concat(parameters('ApimServiceName'), '/5eb2961d2157923434215b1d/5eb2962363fa1d4ba2fbe7a5')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), '5eb2961d2157923434215b1d')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5eb2961d2157923434215b1d-5eb2962363fa1d4ba2fbe7a5-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/5eb2961d2157923434215b1d/5eb2962363fa1d4ba2fbe7a5/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), '5eb2961d2157923434215b1d', '5eb2962363fa1d4ba2fbe7a5')]"
      ]
    },
    {
      "properties": {},
      "name": "[concat(parameters('ApimServiceName'), '/mobile/5eb2961d2157923434215b1d')]",
      "type": "Microsoft.ApiManagement/service/products/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), '5eb2961d2157923434215b1d')]"
      ]
    },
    {
      "properties": {
        "description": "Import from \"ahmsOHFunctionEx1\" Function App",
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "1",
        "isCurrent": true,
        "subscriptionRequired": true,
        "displayName": "User",
        "serviceUrl": "[parameters('serviceUrl').Api5eb295fbc36213ade9f83eb3]",
        "path": "User",
        "protocols": [
          "https"
        ]
      },
      "name": "[concat(parameters('ApimServiceName'), '/5eb295fbc36213ade9f83eb3')]",
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": []
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "",
        "request": {
          "queryParameters": [
            {
              "name": "userId",
              "description": "User Id",
              "type": "string",
              "required": true,
              "values": []
            }
          ],
          "headers": [],
          "representations": []
        },
        "responses": [],
        "displayName": "GetUser",
        "method": "GET",
        "urlTemplate": "/GetUser"
      },
      "name": "[concat(parameters('ApimServiceName'), '/5eb295fbc36213ade9f83eb3/5eb296005c7907393997d366')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), '5eb295fbc36213ade9f83eb3')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/5eb295fbc36213ade9f83eb3-apiPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/5eb295fbc36213ade9f83eb3/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), '5eb295fbc36213ade9f83eb3')]"
      ]
    },
    {
      "properties": {},
      "name": "[concat(parameters('ApimServiceName'), '/mobile/5eb295fbc36213ade9f83eb3')]",
      "type": "Microsoft.ApiManagement/service/products/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), '5eb295fbc36213ade9f83eb3')]"
      ]
    }
  ]
}